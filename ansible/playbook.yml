---
- name: elementary OS Configuration
  gather_facts: true
  hosts: all
  tasks:
    # System configuration
    - name: Set hostname
      become: yes
      template:
        src: hostname.j2
        dest: /etc/hostname
    - name: Update /etc/hosts IPv4 entry
      become: yes
      lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.0\.1'
        line: 127.0.0.1 localhost {{ hostname }}
    - name: Update /etc/hosts IPv6 entry
      become: yes
      lineinfile:
        path: /etc/hosts
        regexp: '^::1'
        line: ::1 localhost {{ hostname }}
    - name: Create ~/.ssh directory
      file:
        path: "/home/{{ user_name }}/.ssh"
        state: directory
        mode: '0755'
    - name: Generate OpenSSH keypair
      openssh_keypair:
        path: "/home/{{ user_name }}/.ssh/id_rsa"
        owner: "{{ user_name }}"
        group: "{{ user_group }}"
      #notify: add github ssh key

    # Application and package installation pre-requisites
    - name: Install Microsoft GPG key
      become: yes
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present
    - name: Add VSCode Debian repository
      become: yes
      apt_repository:
        repo: deb [arch=amd64,arm64,armhf] https://packages.microsoft.com/repos/code stable main
        state: present
    - name: Install Docker GPG key
      become: yes
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add Docker Debian repository
      become: yes
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present
    - name: Add Monitor PPA
      become: yes
      apt_repository:
        repo: ppa:stsdc/monitor
    - name: Add Flathub flatpak remote
      flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
    # - name: Add AppCenter flatpak remote
    #   flatpak_remote:
    #     name: appcenter
    #     state: present
    #     flatpakrepo_url: https://flatpak.elementary.io/repo.flatpakrepo

    # Install applications and packages
    - name: Install apt packages
      become: yes
      apt:
        pkg:
          - apt-transport-https
          - code
          - com.github.stsdc.monitor
          - containerd.io
          - curl
          - docker-ce
          - docker-ce-cli
          - elementary-sdk
          - git
          - libvala-dev
          - meson
          - net-tools
          - neofetch
          - python3-pip
          - vim
        state: present
        update_cache: yes
    - name: Install flatpaks from AppCenter
      flatpak:
        name: "{{ item }}"
        state: present
        remote: appcenter
        method: user
      loop:
        - com.github.alecaddd.sequeler
        - com.github.cassidyjames.palette
        - com.github.danrabbit.harvey
        - com.github.danrabbit.lookbook
    - name: Install flatpaks from Flathub
      flatpak:
        name: org.inkscape.Inkscape
        state: present
        remote: flathub
        method: user
    - name: Install pip packages
      pip:
        name: psutil
    - name: Clone vala-lint
      git:
        repo: "https://github.com/vala-lang/vala-lint.git"
        dest: /tmp/vala-lint
    - name: Build and install vala-lint
      become: yes
      shell: |
        cd /tmp/vala-lint
        meson build --prefix=/usr
        cd build
        sudo ninja install

    # Configure applications
    - name: Configure git
      template:
        src: .gitconfig.j2
        dest: "/home/{{ user_name }}/.gitconfig"
        owner: "{{ user_name }}"
        group: "{{ user_group }}"
    - name: Configure vim
      become: yes
      template:
        src: .vimrc.j2
        dest: "/home/{{ user_name }}/.vimrc"
        owner: "{{ user_name }}"
        group: "{{ user_group }}"
    - name: Install VSCode extensions
      include_role:
        name: gantsign.visual-studio-code-extensions
        apply:
          become: yes

    # Configure user settings
    - name: Use category view in applications menu
      become_user: "{{ user_name }}"
      dconf:
        key: "/io/elementary/desktop/wingpanel/applications-menu/use-category"
        value: "true"
        state: present
    - name: Use AM/PM date format (1) # TODO: This doesn't seem to actually persist
      become_user: "{{ user_name }}"
      dconf:
        key: "/org/gnome/desktop/interface/clock-format"
        value: "'12h'"
        state: present
    - name: Use AM/PM date format (2) # TODO: This doesn't seem to actually persist
      become_user: "{{ user_name }}"
      dconf:
        key: "/io/elementary/desktop/wingpanel/datetime/clock-format"
        value: "'12h'"
        state: present
    
    # User configuration
    - name: Add user to docker group
      become: yes
      user:
        name: "{{ user_name }}"
        groups: docker
        append: yes

  vars:
    users:
      - username: "{{ user_name }}"
        visual_studio_code_extensions:
          - prince781.vala
          - ms-azuretools.vscode-docker
          - mrorz.language-gettext
          - asabil.meson
          - surajbarkale.ninja
          - ms-python.python
          - samuelcolvin.jinjahtml
